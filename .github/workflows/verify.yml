name: Verify

on:
  push:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  security-events: write

jobs:
  conform:
    runs-on: ubuntu-latest
    name: Conform

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: siderolabs/conform@v0.1.0-alpha.27
        with:
          token: ${{ secrets.CONFORM }}

  checkstyle:
    runs-on: ubuntu-latest
    name: Checkstyle
    strategy:
      max-parallel: 4
      matrix:
        java-version: [ "24" ]

    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0

      - uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165
        with:
          java-version: "${{ matrix.java-version }}"
          distribution: "corretto"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run Checkstyle
        run: mvn --batch-mode clean verify checkstyle:check

  pmd:
    runs-on: ubuntu-latest
    name: PMD
    strategy:
      max-parallel: 4
      matrix:
        java-version: [ "24" ]

    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          java-version: "${{ matrix.java-version }}"
          distribution: "corretto"

      - name: Download PMD
        run: |
          PMD_VERSION="6.55.0"
          wget -q https://github.com/pmd/pmd/releases/download/pmd_releases%2F${PMD_VERSION}/pmd-bin-${PMD_VERSION}.zip
          unzip -q pmd-bin-${PMD_VERSION}.zip
          echo "$(pwd)/pmd-bin-${PMD_VERSION}/bin" >> $GITHUB_PATH

      - name: Cache PMD ruleset
        uses: actions/cache@v3
        with:
          path: rulesets
          key: ${{ runner.os }}-pmd-ruleset-${{ hashFiles('rulesets/*.xml') }}
          restore-keys: |
            ${{ runner.os }}-pmd-ruleset-

      - name: Run PMD analysis
        run: |
          pmd check -d src/main/java \
          -R rulesets/java-best-practices.xml \
          -f sarif \
          -r pmd-results.sarif \
          --fail-on-violation false

      - name: Upload SARIF results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: pmd-results.sarif
          wait-for-processing: true

      - name: Display PMD results in workflow
        run: |
          if [ -f pmd-results.sarif ]; then
          echo "## PMD Analysis Results" >> $GITHUB_STEP_SUMMARY
          echo "| Severity | File | Line | Rule | Description |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|------|------|------|-------------|" >> $GITHUB_STEP_SUMMARY
                
          # Extract violations from SARIF (simplified)
          cat pmd-results.sarif | jq -r '.runs[0].results[]? | "| \(.level) | \(.locations[0].physicalLocation.artifactLocation.uri) | \(.locations[0].physicalLocation.region.startLine) | \(.ruleId) | \(.message.text) |"' >> $GITHUB_STEP_SUMMARY
            else
              echo "No PMD results found" >> $GITHUB_STEP_SUMMARY
            fi

  spotbugs:
    runs-on: ubuntu-latest
    name: SpotBugs
    strategy:
      max-parallel: 4
      matrix:
        java-version: [ "24" ]
    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          java-version: "${{ matrix.java-version }}"
          distribution: "temurin"
      - name: Cache Maven packages
        uses: actions/cache@v4
        id: maven-cache
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Compile and Run SpotBugs
        run: |
          mvn clean compile || { echo "Compilation failed"; exit 1; }
          mvn spotbugs:spotbugs || { echo "SpotBugs failed"; exit 1; }
      - name: Upload SARIF to GitHub
        if: always()
        uses: github/codeql-action/upload-sarif@64d10c13136e1c5bce3e5fbde8d4906eeaafc885 # v3
        with:
          sarif_file: target/spotbugs/spotbugs.sarif  # Adjust if using a different filename/dir (e.g., target/spotbugsSarif.json)
        continue-on-error: false


  test:
    runs-on: ubuntu-latest
    name: Unit Tests
    strategy:
      max-parallel: 4
      matrix:
        java-version: [ "24" ]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: "${{ matrix.java-version }}"
          cache: maven

      - name: Run Tests
        run: mvn -B test

  build:
    runs-on: ubuntu-latest
    needs:
      - test
      - checkstyle
      - pmd
      - spotbugs
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 24
          cache: maven

      - name: Clean and Compile
        run: mvn -B clean compile