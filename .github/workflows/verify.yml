name: Verify

on:
  push:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  security-events: write

jobs:
  conform:
    runs-on: ubuntu-latest
    name: Conform

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: siderolabs/conform@v0.1.0-alpha.27
        with:
          token: ${{ secrets.CONFORM }}

  checkstyle:
    runs-on: ubuntu-latest
    name: Checkstyle
    strategy:
      max-parallel: 4
      matrix:
        java-version: [ "24" ]

    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0

      - uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165
        with:
          java-version: "${{ matrix.java-version }}"
          distribution: "corretto"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run Checkstyle
        run: mvn --batch-mode clean verify checkstyle:check

  pmd:
    runs-on: ubuntu-latest
    name: PMD
    strategy:
      max-parallel: 4
      matrix:
        java-version: [ "24" ]

    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          java-version: "${{ matrix.java-version }}"
          distribution: "corretto"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run PMD Analysis
        run: mvn --batch-mode clean pmd:check

  spotbugs:
    runs-on: ubuntu-latest
    name: SpotBugs
    strategy:
      max-parallel: 4
      matrix:
        java-version: [ "24" ]
    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          java-version: "${{ matrix.java-version }}"
          distribution: "temurin"
      - name: Cache Maven packages
        uses: actions/cache@v4  # Updated to latest stable tag
        id: maven-cache  # Optional: Add ID for cache-hit checks
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Compile and Run SpotBugs
        run: |
          mvn clean compile || { echo "Compilation failed"; exit 1; }
          mvn spotbugs:spotbugs || { echo "SpotBugs failed"; exit 1; }
      - name: Check SpotBugs Report
        run: |
          ls -l target/spotbugs/ || echo "SpotBugs directory missing"
          cat target/spotbugs/spotbugs.xml || echo "SpotBugs XML report missing or empty"
      - name: Upload SpotBugs Report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: spotbugs-report
          path: target/spotbugs/spotbugs.xml
      - name: Convert SpotBugs XML to SARIF
        run: |
          curl -L -o spotbugs.jar https://repo1.maven.org/maven2/com/github/spotbugs/spotbugs/4.9.6/spotbugs-4.9.6.jar
          java -cp spotbugs.jar com.github.spotbugs.sparks.SpotBugsSarif target/spotbugs/spotbugs.xml spotbugs.sarif
        continue-on-error: true
      - name: Check SARIF File
        run: ls -l spotbugs.sarif || echo "SARIF file missing"
      - name: Upload SARIF to GitHub
        if: always()
        uses: github/codeql-action/upload-sarif@64d10c13136e1c5bce3e5fbde8d4906eeaafc885 # v3
        with:
          sarif_file: spotbugs.sarif
        continue-on-error: true

  test:
    runs-on: ubuntu-latest
    name: Unit Tests
    strategy:
      max-parallel: 4
      matrix:
        java-version: [ "24" ]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: "${{ matrix.java-version }}"
          cache: maven

      - name: Run Tests
        run: mvn -B test

  build:
    runs-on: ubuntu-latest
    needs:
      - test
      - checkstyle
      - pmd
      - spotbugs
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 24
          cache: maven

      - name: Clean and Compile
        run: mvn -B clean compile