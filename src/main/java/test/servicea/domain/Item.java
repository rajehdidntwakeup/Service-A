package test.servicea.domain;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;

/**
 * Entity representing an Item.
 * This class serves as a data model for the "Item" entity, typically
 * representing information about an item, such as its name, stock, price, and description.
 */
@Entity
public class Item {

  /**
   * The unique identifier for the "Item" entity.
   * This field is autogenerated using the IDENTITY strategy.
   */
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  private int id;

  /**
   * Represents the name of an item.
   * This field holds a textual description or title for the Item entity.
   */
  private String name;

  /**
   * Represents the quantity of items available in stock for this Item instance.
   */
  private int stock;

  /**
   * Represents the price of the item.
   * The price is stored as a double value.
   */
  private double price;

  /**
   * A textual description of the item.
   */
  private String description;

  /**
   * Creates an empty Item instance.
   */
  public Item() {
  }


  /**
   * Constructs an Item instance with the specified attributes.
   *
   * @param name        the name of the item
   * @param stock       the number of items in stock
   * @param price       the price of the item
   * @param description the description of the item
   */
  public Item(String name, int stock, double price, String description) {
    this.name = name;
    this.stock = stock;
    this.price = price;
    this.description = description;
  }

  /**
   * Retrieves the unique identifier of this item.
   *
   * @return the id of the item
   */
  public int getId() {
    return id;
  }

  /**
   * Retrieves the name of the item.
   *
   * @return the name of the item as a String.
   */
  public String getName() {
    return name;
  }

  /**
   * Retrieves the stock value of this Item instance.
   *
   * @return the stock value as an integer.
   */
  public int getStock() {
    return stock;
  }

  /**
   * Retrieves the price of the item.
   *
   * @return the price of the item as a double
   */
  public double getPrice() {
    return price;
  }

  /**
   * Retrieves the description of the item.
   *
   * @return the description of the item as a String.
   */
  public String getDescription() {
    return description;
  }

  /**
   * Sets the name of the item.
   *
   * @param name the name to set, represented as a String
   */
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Sets the stock quantity of the item.
   *
   * @param stock the stock quantity to set, represented as an integer
   */
  public void setStock(int stock) {
    this.stock = stock;
  }

  /**
   * Sets the price of the item.
   *
   * @param price the price to set, represented as a double
   */
  public void setPrice(double price) {
    this.price = price;
  }

  /**
   * Sets the description of the item.
   *
   * @param description the description to set, represented as a String
   */
  public void setDescription(String description) {
    this.description = description;
  }
}
